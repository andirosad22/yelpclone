<% layout('layouts/app')%>
<link rel="stylesheet" href="/css/star.css">

  <div class="row mb-5">
    <div class="col-6">
      <div class="card">
        <div id="carouselExampleFade" class="carousel slide carousel-fade">
          <div class="carousel-inner">
            <% place.images.forEach((image, index) => {%>
            <div class="carousel-item <%= index === 0 ? 'active' : '' %> ">
              <img src="/images/<%= image.filename %>" class="d-block w-100" alt="<%= image.filename %>">
            </div>
            <% }) %>
          </div>
          <% if(place.images.length >1) { %>
          <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleFade" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
          </button>
          <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleFade" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
          </button>
          <% } %>
        </div>
        <div class="card-body">
          <h5 class="card-title"><%= place.title %></h5>
          <p class="card-text"><%= place.description %></p>
        </div>
        <ul class="list-group">
          <li class="list-group-item"><%= place.location %></li>
          <li class="list-group-item"> Author : <%= place.author.username %></li>
          <li class="list-group-item"><%= place.price %></li>
        </ul>
        <% if(currentUser && place.author.equals(currentUser._id)){ %>
        <div class="card-body d-flex gap-3">
          <a href="/places/<%= place._id %>/edit" class="btn btn-warning text-white card-link">Edit</a>
          <form action="/places/<%= place._id%>?_method=DELETE" method="POST">
            <button type="submit" class="btn btn-danger text-white">Delete</button>
          </form>
        </div>
        <% } %>
        <div class="card-footer">
          <a href="/places" class="btn btn-primary"> &leftarrow; Back</a>
        </div>
      </div>
    </div>
    <div class="col-6">
      <div style="width: 640px; height: 480px; margin-bottom: 5%;" id="mapContainer"></div>
      <h3>Review place here</h3>  
      <form action="/places/<%= place._id %>/reviews" method="POST" class="validated-form" novalidate>
        <div class="mb-3">
          <fieldset class="starability-basic">
            <legend>Rating:</legend>
            <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="1" checked aria-label="No rating." />
            <input type="radio" id="first-rate1" name="review[rating]" value="1" />
            <label for="first-rate1" title="Terrible">1 star</label>
            <input type="radio" id="first-rate2" name="review[rating]" value="2" />
            <label for="first-rate2" title="Not good">2 stars</label>
            <input type="radio" id="first-rate3" name="review[rating]" value="3" />
            <label for="first-rate3" title="Average">3 stars</label>
            <input type="radio" id="first-rate4" name="review[rating]" value="4" />
            <label for="first-rate4" title="Very good">4 stars</label>
            <input type="radio" id="first-rate5" name="review[rating]" value="5" />
            <label for="first-rate5" title="Amazing">5 stars</label>
          </fieldset>
          <div class="valid-feedback">
            Looks good
          </div>
          <div class="invalid-feedback">
            Please fil out this
          </div>
        </div>
        <div class="mb-3">
          <label for="review">Review</label>
          <textarea name="review[body]" id="review" cols="30" rows="5" class="form-control" required></textarea>
          <div class="valid-feedback">
            Looks good
          </div>
          <div class="invalid-feedback">
            Please fil out this
          </div>
        </div>
        <button type="submit" class="btn btn-success">Simpan</button>
      </form>
      <% for(const review of place.reviews){ %>
        <div class="card">
          <div class="card-body">
            <p class="starability-result" data-rating="<%= review.rating %>">
              Rated: 3 stars
            </p>
            <p class="card-text"><%= review.body %></p>
            <% if(currentUser && review.author.equals(currentUser._id)) { %>
            <form action="/places/<%= place._id %>/reviews/<%= review._id %>?_method=DELETE" method="POST"  style="display: inline !important;">
              <button type="submit" class="btn btn-danger btn-sm">Delete</button>
            </form>
            <% } %>
          </div>
        </div>
        <% } %>
    </div>
  </div>
  <script>
    const place = <%- JSON.stringify(place) %>;
    const placeLocation = {lng: place.geometry.coordinates[0], lat: place.geometry.coordinates[1]}
  </script>
  <script>

    function addMarker(group, coordinates, html){
      const svgMarkup = '<svg xmlns="http://www.w3.org/2000/svg" height="16" width="12" fill="red" viewBox="0 0 384 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--><path d="M215.7 499.2C267 435 384 279.4 384 192C384 86 298 0 192 0S0 86 0 192c0 87.4 117 243 168.3 307.2c12.3 15.3 35.1 15.3 47.4 0zM192 128a64 64 0 1 1 0 128 64 64 0 1 1 0-128z"/></svg>'
      const icon = new H.map.Icon(svgMarkup);
      const marker = new H.map.Marker(placeLocation, {icon: icon})
      marker.setData(html);
      group.addObject(marker);
    }

    function addInfoBubble(){
      const group = new H.map.Group();

      map.addObject(group);

      group.addEventListener('tap', (e) => {
        const bubble = new H.ui.InfoBubble(e.target.getGeometry(),{
          content: e.target.getData()
        });
        ui.addBubble(bubble)
      }, false)

      addMarker(group, placeLocation, `<div> <%= place.title %> </div> <div> <%= place.description %> </div>`)

    }
    
    
    // Initialize the platform object
    const platform = new H.service.Platform({
      'apikey': 'NIkJCDN1O-TX1qEsl_-9zZMS32c4u-DCz58S1ywfwFw'
    });

    // Obtain the default map types from the platform object
    const defaultLayer = platform.createDefaultLayers();

    // Instantiate (and display) the map
    const map = new H.Map(
      document.getElementById('mapContainer'),
      defaultLayer.vector.normal.map,
      {
        zoom: 10,
        center: placeLocation
      });

      const ui = H.ui.UI.createDefault(map, defaultLayer, 'en-US');
      const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));

      addInfoBubble(map);
  </script>